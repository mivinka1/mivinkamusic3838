# Daisyxmusic (Telegram bot project )
# Copyright (C) 2021  Inukaasith

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.


import asyncio

from pyrogram import Client, filters
from pyrogram.errors import UserAlreadyParticipant

from DaisyXMusic.config import SUDO_USERS
from DaisyXMusic.helpers.decorators import authorized_users_only, errors
from DaisyXMusic.services.callsmusic import client as USER


@Client.on_message(filters.command(["userbotjoin"]) & ~filters.private & ~filters.bot)
@authorized_users_only
@errors
async def addchannel(client, message):
    chid = message.chat.id
    try:
        invitelink = await client.export_chat_invite_link(chid)
    except:
        await message.reply_text(
            "<b>–î–æ–¥–∞–π—Ç–µ –º–µ–Ω–µ –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤ —Ü—ñ—î—ó –≥—Ä—É–ø–∏</b>",
        )
        return

    try:
        user = await USER.get_me()
    except:
        user.first_name = "DaisyMusic"

    try:
        await USER.join_chat(invitelink)
        await USER.send_message(message.chat.id, "–Ø –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è —Å—é–¥–∏, —è–∫ –≤–∏ —ñ –ø—Ä–æ—Å–∏–ª–∏")
    except UserAlreadyParticipant:
        await message.reply_text(
            "<b>–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –±–æ—Ç –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ –≤–∞—à–æ–≥–æ —á–∞—Ç—É</b>",
        )
    except Exception as e:
        print(e)
        await message.reply_text(
            f"<b>üî¥ Flood Wait Error üî¥ \nUser {user.first_name} –Ω–µ –≤–¥–∞–ª–æ—Å—è –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ –≤–∞—à–æ—ó –≥—Ä—É–ø–∏ —á–µ—Ä–µ–∑ –±–∞–≥–∞—Ç–æ —Å–ø—Ä–æ–±!–ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –±–æ—Ç –Ω–µ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π —É –≥—Ä—É–ø—ñ."         
            "\n\–≤—Ä—É—á–Ω—É –¥–æ–¥–∞–π—Ç–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –¥–æ —Å–≤–æ—î—ó –≥—Ä—É–ø–∏ —Ç–∞ –ø–æ–≤—Ç–æ—Ä—ñ—Ç—å —Å–ø—Ä–æ–±—É</b>",
        )
        return
    await message.reply_text(
        "<b>–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –±–æ—Ç –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ –≤–∞—à–æ–≥–æ —á–∞—Ç—É</b>",
    )


@USER.on_message(filters.group & filters.command(["userbotleave"]))
@authorized_users_only
async def rem(USER, message):
    try:
        await USER.leave_chat(message.chat.id)
    except:
        await message.reply_text(
            f"<b>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –º–æ–∂–µ –≤–∏–π—Ç–∏ –∑ –≤–∞—à–æ—ó –≥—Ä—É–ø–∏!"
            "\n\nOr –≤—Ä—É—á–Ω—É –≤–∏–¥–∞–ª—ñ—Ç—å –º–µ–Ω–µ –∑ –≤–∞—à–æ—ó –≥—Ä—É–ø–∏</b>",
        )
        return


@Client.on_message(filters.command(["userbotleaveall"]))
async def bye(client, message):
    if message.from_user.id in SUDO_USERS:
        left = 0
        failed = 0
        lol = await message.reply("–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –∑–∞–ª–∏—à–∏–≤ —É—Å—ñ —á–∞—Ç–∏")
        async for dialog in USER.iter_dialogs():
            try:
                await USER.leave_chat(dialog.chat.id)
                left = left + 1
                await lol.edit(
                    f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤–∏—Ö–æ–¥–∏—Ç—å...: {left} chats. –ü–æ–º–∏–ª–∫–∞: {failed} chats."
                )
            except:
                failed = failed + 1
                await lol.edit(
                    f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤–∏—Ö–æ–¥–∏—Ç—å...: {left} chats. –ü–æ–º–∏–ª–∫–∞: {failed} chats."
                )
            await asyncio.sleep(0.7)
        await client.send_message(
            message.chat.id, f"Left {left} chats. –ü–æ–º–∏–ª–∫–∞ {failed} chats."
        )


@Client.on_message(
    filters.command(["userbotjoinchannel", "ubjoinc"]) & ~filters.private & ~filters.bot
)
@authorized_users_only
@errors
async def addcchannel(client, message):
    try:
        conchat = await client.get_chat(message.chat.id)
        conid = conchat.linked_chat.id
        chid = conid
    except:
        await message.reply("–ß–∞—Ç –ø–æ–≤—è–∑–∞–Ω–∏–π")
        return
    try:
        invitelink = await client.export_chat_invite_link(chid)
    except:
        await message.reply_text(
            "<b>–î–æ–¥–∞–π—Ç–µ –º–µ–Ω–µ –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤ —Ü—ñ—î—ó –≥—Ä—É–ø–∏</b>",
        )
        return

    try:
        user = await USER.get_me()
    except:
        user.first_name = "DaisyMusic"

    try:
        await USER.join_chat(invitelink)
        await USER.send_message(message.chat.id, "–Ø –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è —Å—é–¥–∏, —è–∫ –≤–∏ —ñ –ø—Ä–æ—Å–∏–ª–∏")
    except UserAlreadyParticipant:
        await message.reply_text(
            "<b>–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –±–æ—Ç –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ –≤–∞—à–æ–≥–æ —á–∞—Ç—É</b>",
        )
        return
    except Exception as e:
        print(e)
        await message.reply_text(
             f"<b>üî¥ Flood Wait Error üî¥ \nUser {user.first_name} –Ω–µ –≤–¥–∞–ª–æ—Å—è –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ –≤–∞—à–æ—ó –≥—Ä—É–ø–∏ —á–µ—Ä–µ–∑ –±–∞–≥–∞—Ç–æ —Å–ø—Ä–æ–±!–ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –±–æ—Ç –Ω–µ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π —É –≥—Ä—É–ø—ñ."
            "\n\–≤—Ä—É—á–Ω—É –¥–æ–¥–∞–π—Ç–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –¥–æ —Å–≤–æ—î—ó –≥—Ä—É–ø–∏ —Ç–∞ –ø–æ–≤—Ç–æ—Ä—ñ—Ç—å —Å–ø—Ä–æ–±—É</b>",
        )
        return
    await message.reply_text(
        "<b>–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –±–æ—Ç –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ –≤–∞—à–æ–≥–æ —á–∞—Ç—É</b>",
    )
